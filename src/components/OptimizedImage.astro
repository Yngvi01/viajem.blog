---
import { Image } from 'astro:assets';
import { getImageSource } from '../utils/imageImports';

export interface Props {
  src?: string | ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  quality?: number;
  loading?: 'eager' | 'lazy';
  format?: 'webp' | 'avif' | 'png' | 'jpg' | 'jpeg';
  sizes?: string;
  fetchpriority?: 'high' | 'low' | 'auto';
  fallbackImage?: string | ImageMetadata;
  decoding?: 'async' | 'sync' | 'auto';
  style?: string;
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  class: className = '',
  quality = 80,
  loading = 'lazy',
  format = 'webp', // corrigido: agora é string
  sizes,
  fetchpriority = 'auto',
  fallbackImage = 'assets/images/default-attraction.jpg',
  decoding = 'async',
  style = ''
} = Astro.props;

const imageSrc = getImageSource(src, fallbackImage);

if (!imageSrc) {
  throw new Error(`Imagem inválida: src não definido e fallback '${fallbackImage}' falhou.`);
}

const defaultSizes = '(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 800px';
const finalSizes = sizes ?? defaultSizes;
---

<Image 
  src={imageSrc} 
  alt={alt} 
  width={width} 
  height={height}
  layout="fixed"
  class={className}
  quality={quality}
  loading={loading}
  format={format}
  sizes={finalSizes}
  fetchpriority={fetchpriority}
  decoding={decoding}
  style={style}
/>
