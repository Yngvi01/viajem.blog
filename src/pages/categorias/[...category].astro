---
import Main from "../../layouts/MainLayout.astro";
import OptimizedImage from "../../components/OptimizedImage.astro";
import { GetCategories } from "../../utils/content";
import { Icon } from "astro-icon/components";
import { formatDate } from "../../utils/date";
import YukinaConfig from "../../../yukina.config";

// Corrigindo o parâmetro para 'category'
export async function getStaticPaths() {
  const categorias = await GetCategories();
  return Array.from(categorias.keys()).map((categorySlug) => ({
    params: { category: categorySlug }, // Parâmetro correto
  }));
}

// Usando o parâmetro correto 'category'
const { category } = Astro.params;
const categorias = await GetCategories();
const categoryData = categorias.get(category);

const categoryBanner = {
  title: categoryData?.name || "Categoria",
  subTitle: "Escolha o seu artigo:",
  bannerImage: categoryData?.image || "/images/default-category-banner.svg",
};

const posts = categoryData?.posts || [];
---

<Main
  title={categoryBanner.title}
  subTitle={categoryBanner.subTitle}
  bannerImage={categoryBanner.bannerImage}
>
  <div class="space-y-8">
    <div class="cities-grid" data-pagefind-body>
      {
        posts.length > 0 ? (
          posts.map((entry) => (
            <div
              class="city-card"
              data-pagefind-body
              data-pagefind-weight="10"
              data-pagefind-meta="title"
            >
              <div class="city-image-container">
                <OptimizedImage 
                  src={entry.data.attraction_image || entry.data.image}
                  alt={entry.data.title}
                  width={400}
                  height={300}
                  class="city-background-image"
                  format="webp"
                  quality={85}
                  sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
                  fallbackImage="images/default-attraction.jpg"
                />
                <div class="city-overlay"></div>
              </div>
              <div class="post-meta">
                <div class="post-date">
                  <Icon name="line-md:calendar" class="meta-icon" />
                  <span>
                    {formatDate(entry.date, YukinaConfig.locale)}
                  </span>
                </div>
              </div>
              <a href={entry.id} class="city-link">
                <div class="city-content">
                  <h3 class="city-title">{entry.data.title}</h3>
                  <p class="city-description">{entry.data.description}</p>
                  <div class="read-more">
                    <span>Leia mais</span>
                    <Icon name="line-md:arrow-right-circle" class="arrow-icon" />
                  </div>
                </div>
              </a>
            </div>
          ))
        ) : (
          <p class="text-center text-gray-500">
            Nenhum post encontrado nesta categoria.
          </p>
        )
      }
    </div>
  </div>
</Main>

<style>
  .cities-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 25px;
    padding: 20px;
  }

  .city-card {
    background-color: #f9f9f9;
    border-radius: 16px;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
    transition:
      transform 0.4s cubic-bezier(0.4, 0, 0.2, 1),
      box-shadow 0.4s ease;
    height: 320px;
    color: white;
    display: flex;
    flex-direction: column;
    position: relative;
    overflow: hidden;
    z-index: 0;
  }
  
  .city-image-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }
  
  .city-background-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform 0.6s ease;
  }

  .city-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0.1) 0%,
      rgba(0, 0, 0, 0.6) 70%,
      rgba(0, 0, 0, 0.8) 100%
    );
    z-index: 1;
    transition: opacity 0.4s ease;
  }
  
  .post-meta {
    position: absolute;
    top: 15px;
    left: 15px;
    z-index: 5;
    display: flex;
    gap: 10px;
    font-size: 0.8rem;
  }
  
  .post-date, .post-tag {
    background-color: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(4px);
    padding: 4px 10px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  .meta-icon {
    width: 16px;
    height: 16px;
  }

  .city-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
  }
  
  .city-card:hover .city-background-image {
    transform: scale(1.08);
  }

  .city-link {
    position: relative;
    text-decoration: none;
    color: inherit;
    z-index: 2;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
  }

  .city-content {
    padding: 25px;
    margin-top: auto;
    transition: transform 0.3s ease;
  }

  .city-title {
    font-size: 1.5rem;
    margin: 0 0 10px 0;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);
    font-weight: 700;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: transform 0.3s ease;
  }

  .city-description {
    font-size: 0.95rem;
    margin: 0 0 15px 0;
    color: rgba(255, 255, 255, 0.9);
    line-height: 1.5;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: opacity 0.3s ease;
  }
  
  .read-more {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
    font-weight: 600;
    margin-top: 5px;
    opacity: 0;
    transform: translateY(10px);
    transition: 
      transform 0.4s ease,
      opacity 0.4s ease;
  }
  
  .arrow-icon {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
  }

  .space-y-8 {
    space-y: 2rem;
  }

  /* Hover effects */
  .city-card:hover .city-title {
    transform: translateY(-5px);
  }
  
  .city-card:hover .city-description {
    opacity: 1;
  }
  
  .city-card:hover .read-more {
    opacity: 1;
    transform: translateY(0);
  }
  
  .city-card:hover .arrow-icon {
    transform: translateX(3px);
  }

  @media (max-width: 768px) {
    .cities-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      padding: 15px;
    }
    
    .city-card {
      height: 300px;
    }
  }

  @media (max-width: 480px) {
    .cities-grid {
      grid-template-columns: 1fr;
      gap: 15px;
    }
    
    .city-card {
      height: 280px;
    }
    
    .city-title {
      font-size: 1.3rem;
    }
    
    .city-description {
      font-size: 0.9rem;
    }
    
    .post-meta {
      top: 10px;
      left: 10px;
    }
  }
</style>
